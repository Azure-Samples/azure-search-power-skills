trigger:
  branches:
    include:
    - dev
  paths:
    include:
    - mlops/clustering_pipeline/*
    - mlops/common/*
    - find_similarity/*
pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: mlops-vg


jobs:
  - job: "Publish_Training_Pipeline"
    variables:
      - group: mlops-vg
    pool:
      vmImage: "ubuntu-latest"
    displayName: "Publish Training Pipeline"
    steps:
    - template: mlops_base_pipeline.yml
      parameters:
        pipelinePublishScript: python3 -m mlops.clustering_pipeline.create_clustering_pipeline

    - template: mlops_pipeline_info_template.yml
      parameters:
        pipelineid: AML_PIPELINEID

  - job: "Run_Training_Pipeline"
    dependsOn: "Publish_Training_Pipeline"
    variables:
      - name: AML_PIPELINE_ID
        value: $[ dependencies.Publish_Training_Pipeline.outputs['getpipelineinfo.AML_PIPELINEID'] ]
      - name: EXPERIMENT_NAME
        value: $[ dependencies.Publish_Training_Pipeline.outputs['getpipelineinfo.EXPERIMENTNAME'] ]
      - group: mlops-vg
    displayName: "Trigger ML Training Pipeline"
    timeoutInMinutes: 0
    pool: server
    steps:
      - task: ms-air-aiagility.vss-services-azureml.azureml-restApi-task.MLPublishedPipelineRestAPITask@0
        displayName: 'Invoke ML pipeline'
        inputs:
          azureSubscription: '$(WORKSPACE_SVC_CONNECTION)'
          PipelineId: '$(AML_PIPELINE_ID)'
          ExperimentName: '$(EXPERIMENT_NAME)'

  - job: "Publish_Azure_Function"
    dependsOn: "Run_Training_Pipeline"
    variables:
      - group: mlops-vg
    pool:
      vmImage: "ubuntu-latest"
    displayName: "Publish Azure Function"
    steps:
      - template: mlops_base_pipeline.yml
        parameters:
          pipelinePublishScript: python3 -m mlops.get_model --output_dir $(Build.SourcesDirectory)/find_similarity/score_similarity/models
      - bash: |
          pip install --target="./find_similarity/.python_packages/lib/site-packages" -r ./find_similarity/requirements.txt
      - task: CopyFiles@2
        displayName: "Copying ml folder"
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)/ml'
          TargetFolder: "$(System.DefaultWorkingDirectory)/find_similarity/score_similarity/ml"
      - task: CopyFiles@2
        displayName: "Copying models folder"
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)/models'
          TargetFolder: "$(System.DefaultWorkingDirectory)/find_similarity/score_similarity/models"
      - task: ArchiveFiles@2
        displayName: "Archive files"
        inputs:
          rootFolderOrFile: "$(System.DefaultWorkingDirectory)/find_similarity"
          includeRootFolder: false
          archiveFile: "$(System.DefaultWorkingDirectory)/find_similarity/build$(Build.BuildId).zip"
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(System.DefaultWorkingDirectory)/find_similarity/build$(Build.BuildId).zip'
          artifactName: 'drop'
      - task: AzureFunctionApp@1
        displayName: 'Publish the function'
        inputs:
          azureSubscription: '$(AZURE_RM_CONNECTION)'
          appType: functionAppLinux
          appName: '$(AZURE_FUNCTION_NAME)'
          package: '$(System.DefaultWorkingDirectory)/find_similarity/build$(Build.BuildId).zip'
